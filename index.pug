doctype html
html
    head
        title クレーンゲーム
        meta(http-equiv='Content-Type', content='text/html; charset=UTF-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
        style.
            h1, p {
                text-align: center;
                font-family: -apple-system, BlinkMacSystemFont, sans-serif;
            }
            #zone1, #zone2, #zone3, #zone4, #zone5 {
                text-align: center;
            }
            #backward, #left, #right, #forward, #down, #up, #grasp, #release {
                display: inline-block;
                width: 80px;
                height: 80px;
                margin: 0.5em;
                border: solid 1px black;
                vertical-align: middle;
                cursor: pointer;
            }
            div p {
                margin: 0;
                font-size: 2em;
            }
            #down, #up, #grasp, #release {
                width: 100px;
                height: 100px;
            }
    body
        h1 Crane Game Controller
        #zone1: #backward: p ↑
        #zone2
            #left: p ←
            #right: p →
        #zone3
            #forward: p ↓
        #zone4
            #down: p さげる
            #up: p あげる
        #zone5
            #grasp: p つかむ
            #release: p はなす
        script.
            function post(req) {
                /*var xhr = new XMLHttpRequest();
                xhr.open('POST', '/');
                xhr.send(req);*/
                console.log(req);
            }
            var backwardButton = document.getElementById('backward');
            var leftButton = document.getElementById('left');
            var rightButton = document.getElementById('right');
            var forwardButton = document.getElementById('forward');
            var downButton = document.getElementById('down');
            var upButton = document.getElementById('up');
            var graspButton = document.getElementById('grasp');
            var releaseButton = document.getElementById('release');
            backwardButton.addEventListener('mousedown', e => post('backward'));
            backwardButton.addEventListener('mouseup', e => post('stop'));
            leftButton.addEventListener('mousedown', e => post('left'));
            leftButton.addEventListener('mouseup', e => post('stop'));
            rightButton.addEventListener('mousedown', e => post('right'));
            rightButton.addEventListener('mouseup', e => post('stop'));
            forwardButton.addEventListener('mousedown', e => post('forward'));
            forwardButton.addEventListener('mouseup', e => post('stop'));
            downButton.addEventListener('mousedown', e => post('down'));
            downButton.addEventListener('mouseup', e => post('stop'));
            upButton.addEventListener('mousedown', e => post('up'));
            upButton.addEventListener('mouseup', e => post('stop'));
            graspButton.addEventListener('mousedown', e => post('grasp'));
            graspButton.addEventListener('mouseup', e => post('stop'));
            releaseButton.addEventListener('mousedown', e => post('release'));
            releaseButton.addEventListener('mouseup', e => post('stop'));
